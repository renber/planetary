// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: resultset.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PLANetary.Communication.Protobuf {

  /// <summary>Holder for reflection information generated from resultset.proto</summary>
  public static partial class ResultsetReflection {

    #region Descriptor
    /// <summary>File descriptor for resultset.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ResultsetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9yZXN1bHRzZXQucHJvdG8aEGlkZW50aWZpZXIucHJvdG8iQAoJUmVzdWx0",
            "c2V0EhkKB3F1ZXJ5SWQYASABKAsyCC5RdWVyeUlkEhgKBHJvd3MYAiADKAsy",
            "Ci5SZXN1bHRSb3ciMgoJUmVzdWx0Um93EhUKDW51bWJlck9mTm9kZXMYASAB",
            "KA0SDgoGdmFsdWVzGAIgAygCQiOqAiBQTEFOZXRhcnkuQ29tbXVuaWNhdGlv",
            "bi5Qcm90b2J1ZmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::PLANetary.Communication.Protobuf.IdentifierReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PLANetary.Communication.Protobuf.Resultset), global::PLANetary.Communication.Protobuf.Resultset.Parser, new[]{ "QueryId", "Rows" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PLANetary.Communication.Protobuf.ResultRow), global::PLANetary.Communication.Protobuf.ResultRow.Parser, new[]{ "NumberOfNodes", "Values" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Resultset : pb::IMessage<Resultset> {
    private static readonly pb::MessageParser<Resultset> _parser = new pb::MessageParser<Resultset>(() => new Resultset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Resultset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PLANetary.Communication.Protobuf.ResultsetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resultset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resultset(Resultset other) : this() {
      queryId_ = other.queryId_ != null ? other.queryId_.Clone() : null;
      rows_ = other.rows_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resultset Clone() {
      return new Resultset(this);
    }

    /// <summary>Field number for the "queryId" field.</summary>
    public const int QueryIdFieldNumber = 1;
    private global::PLANetary.Communication.Protobuf.QueryId queryId_;
    /// <summary>
    /// the id of the query to which this resultset belongs to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PLANetary.Communication.Protobuf.QueryId QueryId {
      get { return queryId_; }
      set {
        queryId_ = value;
      }
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::PLANetary.Communication.Protobuf.ResultRow> _repeated_rows_codec
        = pb::FieldCodec.ForMessage(18, global::PLANetary.Communication.Protobuf.ResultRow.Parser);
    private readonly pbc::RepeatedField<global::PLANetary.Communication.Protobuf.ResultRow> rows_ = new pbc::RepeatedField<global::PLANetary.Communication.Protobuf.ResultRow>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PLANetary.Communication.Protobuf.ResultRow> Rows {
      get { return rows_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Resultset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Resultset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(QueryId, other.QueryId)) return false;
      if(!rows_.Equals(other.rows_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (queryId_ != null) hash ^= QueryId.GetHashCode();
      hash ^= rows_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (queryId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(QueryId);
      }
      rows_.WriteTo(output, _repeated_rows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (queryId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QueryId);
      }
      size += rows_.CalculateSize(_repeated_rows_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Resultset other) {
      if (other == null) {
        return;
      }
      if (other.queryId_ != null) {
        if (queryId_ == null) {
          queryId_ = new global::PLANetary.Communication.Protobuf.QueryId();
        }
        QueryId.MergeFrom(other.QueryId);
      }
      rows_.Add(other.rows_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (queryId_ == null) {
              queryId_ = new global::PLANetary.Communication.Protobuf.QueryId();
            }
            input.ReadMessage(queryId_);
            break;
          }
          case 18: {
            rows_.AddEntriesFrom(input, _repeated_rows_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResultRow : pb::IMessage<ResultRow> {
    private static readonly pb::MessageParser<ResultRow> _parser = new pb::MessageParser<ResultRow>(() => new ResultRow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResultRow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PLANetary.Communication.Protobuf.ResultsetReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultRow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultRow(ResultRow other) : this() {
      numberOfNodes_ = other.numberOfNodes_;
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultRow Clone() {
      return new ResultRow(this);
    }

    /// <summary>Field number for the "numberOfNodes" field.</summary>
    public const int NumberOfNodesFieldNumber = 1;
    private uint numberOfNodes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NumberOfNodes {
      get { return numberOfNodes_; }
      set {
        numberOfNodes_ = value;
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 2;
    private static readonly pb::FieldCodec<float> _repeated_values_codec
        = pb::FieldCodec.ForFloat(18);
    private readonly pbc::RepeatedField<float> values_ = new pbc::RepeatedField<float>();
    /// <summary>
    /// the values (i.e. columns for this row)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResultRow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResultRow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NumberOfNodes != other.NumberOfNodes) return false;
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NumberOfNodes != 0) hash ^= NumberOfNodes.GetHashCode();
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NumberOfNodes != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(NumberOfNodes);
      }
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NumberOfNodes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumberOfNodes);
      }
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResultRow other) {
      if (other == null) {
        return;
      }
      if (other.NumberOfNodes != 0) {
        NumberOfNodes = other.NumberOfNodes;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NumberOfNodes = input.ReadUInt32();
            break;
          }
          case 18:
          case 21: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
