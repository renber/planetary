/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.9 */

#ifndef PB_PLANETARYMSG_PB_H_INCLUDED
#define PB_PLANETARYMSG_PB_H_INCLUDED
#include <nanopb/pb.h>
#include <planetary/proto/querybroadcast.pb.h>
#include <planetary/proto/queryparentsel.pb.h>
#include <planetary/proto/resultset.pb.h>
#include <planetary/proto/cancelquery.pb.h>
#include <planetary/proto/store.pb.h>
/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _PlanetaryMessage {
    pb_size_t which_payload;
    union {
        QueryBroadcast broadcast;
        QueryParentSel parentsel;
        Resultset resultset;
        CancelQueryMessage cancelquery;
        Store store;
    } payload;
/* @@protoc_insertion_point(struct:PlanetaryMessage) */
} PlanetaryMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define PlanetaryMessage_init_default            {0, {QueryBroadcast_init_default}}
#define PlanetaryMessage_init_zero               {0, {QueryBroadcast_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define PlanetaryMessage_broadcast_tag           1
#define PlanetaryMessage_parentsel_tag           2
#define PlanetaryMessage_resultset_tag           3
#define PlanetaryMessage_cancelquery_tag         4
#define PlanetaryMessage_store_tag               5

/* Struct field encoding specification for nanopb */
extern const pb_field_t PlanetaryMessage_fields[6];

/* Maximum encoded size of messages (where known) */
#define PlanetaryMessage_size                    (5 + sizeof(union{char f1[QueryBroadcast_size]; char f2[QueryParentSel_size]; char f3[Resultset_size]; char f4[CancelQueryMessage_size]; char f5[Store_size];}))

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define PLANETARYMSG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
