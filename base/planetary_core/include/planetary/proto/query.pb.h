/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.2 */

#ifndef PB_QUERY_PB_H_INCLUDED
#define PB_QUERY_PB_H_INCLUDED
#include <nanopb/pb.h>
#include <planetary/proto/identifier.pb.h>
#include <planetary/proto/condition.pb.h>
/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _ActionType {
    ActionType_NONE = 0,
    ActionType_SELECTOR = 1,
    ActionType_ACTOR = 2,
    ActionType_EVENT = 3
} ActionType;
#define _ActionType_MIN ActionType_NONE
#define _ActionType_MAX ActionType_EVENT
#define _ActionType_ARRAYSIZE ((ActionType)(ActionType_EVENT+1))

typedef enum _SelectorType {
    SelectorType_SINGLE = 0,
    SelectorType_SUM = 1,
    SelectorType_MAX = 2,
    SelectorType_MIN = 3,
    SelectorType_AVG = 4,
    SelectorType_COUNT = 5,
    SelectorType_GROUP_BY = 6
} SelectorType;
#define _SelectorType_MIN SelectorType_SINGLE
#define _SelectorType_MAX SelectorType_GROUP_BY
#define _SelectorType_ARRAYSIZE ((SelectorType)(SelectorType_GROUP_BY+1))

/* Struct definitions */
typedef struct _Actor {
    Identifier actorId;
    uint32_t param;
/* @@protoc_insertion_point(struct:Actor) */
} Actor;

typedef struct _Event {
    Identifier eventId;
/* @@protoc_insertion_point(struct:Event) */
} Event;

typedef struct _Selector {
    SelectorType type;
    Identifier sensorId;
/* @@protoc_insertion_point(struct:Selector) */
} Selector;

typedef struct _Action {
    pb_size_t which_content;
    union {
        Selector selector;
        Actor actor;
        Event event;
    } content;
/* @@protoc_insertion_point(struct:Action) */
} Action;

typedef struct _Query {
    QueryId queryId;
    uint32_t periodInSec;
    ConditionLink conditionGroupLink;
    pb_size_t conditionGroups_count;
    ConditionGroup conditionGroups[4];
    pb_size_t actions_count;
    Action actions[10];
/* @@protoc_insertion_point(struct:Query) */
} Query;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Query_init_default                       {QueryId_init_default, 0, _ConditionLink_MIN, 0, {ConditionGroup_init_default, ConditionGroup_init_default, ConditionGroup_init_default, ConditionGroup_init_default}, 0, {Action_init_default, Action_init_default, Action_init_default, Action_init_default, Action_init_default, Action_init_default, Action_init_default, Action_init_default, Action_init_default, Action_init_default}}
#define Action_init_default                      {0, {Selector_init_default}}
#define Selector_init_default                    {_SelectorType_MIN, Identifier_init_default}
#define Actor_init_default                       {Identifier_init_default, 0}
#define Event_init_default                       {Identifier_init_default}
#define Query_init_zero                          {QueryId_init_zero, 0, _ConditionLink_MIN, 0, {ConditionGroup_init_zero, ConditionGroup_init_zero, ConditionGroup_init_zero, ConditionGroup_init_zero}, 0, {Action_init_zero, Action_init_zero, Action_init_zero, Action_init_zero, Action_init_zero, Action_init_zero, Action_init_zero, Action_init_zero, Action_init_zero, Action_init_zero}}
#define Action_init_zero                         {0, {Selector_init_zero}}
#define Selector_init_zero                       {_SelectorType_MIN, Identifier_init_zero}
#define Actor_init_zero                          {Identifier_init_zero, 0}
#define Event_init_zero                          {Identifier_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define Actor_actorId_tag                        1
#define Actor_param_tag                          2
#define Event_eventId_tag                        1
#define Selector_type_tag                        1
#define Selector_sensorId_tag                    2
#define Action_selector_tag                      1
#define Action_actor_tag                         2
#define Action_event_tag                         3
#define Query_queryId_tag                        1
#define Query_periodInSec_tag                    2
#define Query_conditionGroupLink_tag             3
#define Query_conditionGroups_tag                4
#define Query_actions_tag                        5

/* Struct field encoding specification for nanopb */
extern const pb_field_t Query_fields[6];
extern const pb_field_t Action_fields[4];
extern const pb_field_t Selector_fields[3];
extern const pb_field_t Actor_fields[3];
extern const pb_field_t Event_fields[2];

/* Maximum encoded size of messages (where known) */
#define Query_size                               (157 + QueryId_size + 4*ConditionGroup_size + 10*sizeof(union{char f1[Identifier_size]; char f2[Identifier_size]; char f3[Identifier_size];}))
#define Action_size                              (5 + sizeof(union{char f1[Identifier_size]; char f2[Identifier_size]; char f3[Identifier_size];}))
#define Selector_size                            (8 + Identifier_size)
#define Actor_size                               (12 + Identifier_size)
#define Event_size                               (6 + Identifier_size)

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define QUERY_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
