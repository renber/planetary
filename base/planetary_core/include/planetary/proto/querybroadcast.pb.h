/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.2 */

#ifndef PB_QUERYBROADCAST_PB_H_INCLUDED
#define PB_QUERYBROADCAST_PB_H_INCLUDED
#include <nanopb/pb.h>
#include <planetary/proto/query.pb.h>
#include <planetary/proto/identifier.pb.h>
/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _QueryBroadcast {
    NodeId parentId;
    uint8_t distanceToSink;
    bool parentIsPartOfQuery;
    Query query;
/* @@protoc_insertion_point(struct:QueryBroadcast) */
} QueryBroadcast;

/* Default values for struct fields */

/* Initializer values for message structs */
#define QueryBroadcast_init_default              {NodeId_init_default, 0, 0, Query_init_default}
#define QueryBroadcast_init_zero                 {NodeId_init_zero, 0, 0, Query_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define QueryBroadcast_parentId_tag              1
#define QueryBroadcast_distanceToSink_tag        2
#define QueryBroadcast_parentIsPartOfQuery_tag   3
#define QueryBroadcast_query_tag                 4

/* Struct field encoding specification for nanopb */
extern const pb_field_t QueryBroadcast_fields[5];

/* Maximum encoded size of messages (where known) */
#define QueryBroadcast_size                      (20 + NodeId_size + Query_size)

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define QUERYBROADCAST_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
